import{G as e,g as t}from"./vendor.bbaed7fb.js";import*as n from"https://unpkg.com/three@0.126.1/build/three.module.js";import{OrbitControls as o}from"https://unpkg.com/three@0.126.1/examples/jsm/controls/OrbitControls.js";const i=new e,a={width:800,height:800,widthSegments:40,heightSegments:40};function s(){b.geometry.dispose(),b.geometry=new n.PlaneGeometry(a.width,a.height,a.widthSegments,a.heightSegments);const{array:e}=b.geometry.attributes.position,t=[];for(let n=0;n<e.length;n++){if(n%3==0){const t=e[n],o=e[n+1],i=e[n+2];e[n]=t+3*(Math.random()-.5),e[n+1]=o+3*(Math.random()-.5),e[n+2]=i+3*(Math.random()-.5)}t.push(Math.random()*Math.PI*2)}b.geometry.attributes.position.randomValues=t,b.geometry.attributes.position.originalPosition=b.geometry.attributes.position.array;const o=[];for(let n=0;n<b.geometry.attributes.position.count;n++)o.push(0,.19,.4);b.geometry.setAttribute("color",new n.BufferAttribute(new Float32Array(o),3))}i.add(a,"width",1,1e3).onChange(s),i.add(a,"height",1,1e3).onChange(s),i.add(a,"widthSegments",1,100).onChange(s),i.add(a,"heightSegments",1,100).onChange(s);const r=new n.Raycaster,d=new n.Scene,h=new n.PerspectiveCamera(75,innerWidth/innerHeight,.1,1e3),c=new n.WebGLRenderer;c.setSize(innerWidth,innerHeight),c.setPixelRatio(devicePixelRatio),document.body.appendChild(c.domElement),new o(h,c.domElement),h.position.z=100;const g=new n.PlaneGeometry(a.width,a.height,a.widthSegments,a.heightSegments),m=(new n.TextureLoader).load("/textures/jong-marshes-unsplash.jpg"),l=new n.MeshPhongMaterial({map:m,side:n.DoubleSide,flatShading:n.FlatShading,vertexColors:!0}),b=new n.Mesh(g,l);d.add(b),s();const f=new n.DirectionalLight(16777215,1);f.position.set(0,.5,1),d.add(f);const p=new n.DirectionalLight(16777215,1);p.position.set(0,0,-1),d.add(p);const w={x:void 0,y:void 0};let u=0;!function e(){requestAnimationFrame(e),c.render(d,h),r.setFromCamera(w,h),u+=.01;const{array:n,originalPosition:o,randomValues:i}=b.geometry.attributes.position;for(let t=0;t<n.length;t+=3)n[t]=o[t]+.1*Math.cos(u+i[t]),n[t+1]=o[t+1]+.1*Math.sin(u+i[t+1]);b.geometry.attributes.position.needsUpdate=!0;const a=r.intersectObject(b);if(a.length>0){const{color:e}=a[0].object.geometry.attributes;e.setX(a[0].face.a,.1),e.setY(a[0].face.a,.5),e.setZ(a[0].face.a,1),e.setX(a[0].face.b,.1),e.setY(a[0].face.b,.5),e.setZ(a[0].face.b,1),e.setX(a[0].face.c,.1),e.setY(a[0].face.c,.5),e.setZ(a[0].face.c,1),a[0].object.geometry.attributes.color.needsUpdate=!0;const n={r:0,g:.19,b:.4},o={r:.1,g:.5,b:1};t.to(o,{r:n.r,g:n.g,b:n.b,onUpdate:()=>{e.setX(a[0].face.a,o.r),e.setY(a[0].face.a,o.g),e.setZ(a[0].face.a,o.b),e.setX(a[0].face.b,o.r),e.setY(a[0].face.b,o.g),e.setZ(a[0].face.b,o.b),e.setX(a[0].face.c,o.r),e.setY(a[0].face.c,o.g),e.setZ(a[0].face.c,o.b),e.needsUpdate=!0}})}}(),addEventListener("mousemove",(e=>{w.x=e.clientX/innerWidth*2-1,w.y=-e.clientY/innerHeight*2+1})),window.addEventListener("resize",(function(){h.aspect=window.innerWidth/window.innerHeight,h.updateProjectionMatrix(),c.setSize(window.innerWidth,window.innerHeight)}),!1);
